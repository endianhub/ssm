<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 1、配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.master.url}" />
		<property name="username" value="${db.master.user}" />
		<property name="password" value="${db.master.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="100" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>

	<!-- 2、Spring整合Mybatis 必须配置的项 1 、配置 SqlSessionFactory 实例 -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
		<!-- 扫描 entity 包，这样在 mapper 中就可以使用简单类名，多个用 ; 隔开 -->
		<property name="typeAliasesPackage" value="com.xh.ssm.model" />
		<!-- 配置 MyBatis 全局配置文件(可省略) -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 插件配置，例如：分页插件(可省略) -->
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor" />
				<!-- 性能拦截器，兼打印sql，不建议生产环境配置 -->
				<bean id="performanceInterceptor" class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor" />
			</array>
		</property>
		<!-- 全局配置注入 -->
		<property name="globalConfig" ref="globalConfig" />
	</bean>

	<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<property name="idType" value="0" />
	</bean>

	<!-- 3、MyBatis动态实现, 扫描DAO层,必须配置的项 2，可以不配置 id -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定要被扫描的 Dao接口 -->
		<property name="basePackage" value="com.xh.ssm.dao" />
	</bean>

	<!-- 4、事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 5、事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- 6、事务管理 属性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 7、配置切面 -->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.xh.ssm.service..*.*(..))" />
	</aop:config>
</beans>